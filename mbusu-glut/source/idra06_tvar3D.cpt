//Moto In Mezzi Insaturi idra06_tvar3D
//Test-case 2D proposto per la verifica dei software PorFlow
//con permeabilità variabile
//Versione 3D con passo temporale variabile


#include "math.h"
#include "stdio.h"

FILE *stream, *fopen();

#define FALSE 0
#define TRUE 1
#define NUMVICINE 6
#define DIMVICINATO 7
#define YSUP 130
#define YFONDO 1
#define XE 160
#define XW 1
#define ZOUT 150
#define ZIN 1

cadef
{
	dimension 3;
	region Flusso (start:end,start:end,start:end);
	radius 1;
	parameter (lato 5.0, delta_t 10.0, delta_t_cum 0.0, delta_t_cum_prec 0.0, tetas1 0.368, tetas2 0.351, tetas3 0.325, tetas4 0.325, tetar1 0.102, tetar2
	0.0985, tetar3 0.0859, tetar4 0.0859, alfa1 0.0334, alfa2 0.0363, alfa3 0.0345, alfa4 0.0345, n1 1.982, n2 1.632,
	n3 1.573, n4 1.573, ks1 0.009154, ks2 0.005439, ks3 0.004803, ks4 0.048032, rain 0.000023148148); //K, rain in cm/s
	state (float Qteta, Qmoist_cont, Qpsi, Qk, Qh, Qdqdh, Qconvergence, Qmoist_diff);
	neighbor news[6] ([-1,0,0]left, [0,1,0]up, [0,0,-1]in, [0,0,1]out, [0,-1,0]down, [1,0,0]right);
}

void new_water_content();

{//------------------------------------------------------------------------------------- MAIN

	new_water_content();
	
}//-------------------------------------------------------------------------------------- MAIN



void new_water_content()
{//-------------------------------------------------------------------------------------- PROCEDURA new_water_content

	float quota, teta, satur, psi, h, k, uno_su_dqdh, teta_pioggia;
	float alfa, n, tetar, tetas, ks, Delta_h, moist_cont;
	float denom_pow, denompow_uno, denompow_due, denompow_tre;
	float exp_c, exp_d, satur_expc, satur_expd;		
	float volume, moist_print;  
	int i, Ycella, Xcella, Zcella, Zmid;
	float convergence;
	float teta_start, denom_pow_start, moist_diff;


	volume=lato*lato*lato;
	Ycella=GetY;
	Xcella=GetX;
	Zcella=GetZ;
	
	quota=(lato*Ycella)-(lato);
	h=cell_Qh;	
	
	//---- PARAMETRI SUOLO
	
	if ((Xcella>20)&&(Xcella<61)&&(Ycella>80)&&(Ycella<101))
	{
		tetas=tetas4;
		tetar=tetar4;
		alfa=alfa4;
		n=n4;
		ks=ks4;
	}
	else if ((Ycella>112)&&(Ycella<125))
	{
		tetas=tetas2;
		tetar=tetar2;
		alfa=alfa2;
		n=n2;
		ks=ks2;
	}
	else if (Ycella>124)
	{
		tetas=tetas1;
		tetar=tetar1;
		alfa=alfa1;
		n=n1;
		ks=ks1;
	}
	else
	{
		tetas=tetas3;
		tetar=tetar3;
		alfa=alfa3;
		n=n3;
		ks=ks3;
	}
	
	//---- CONDIZIONE INIZIALE
	
	if (step<1)
		h=-734+quota;
	
		
	//--------------------------------AGGIORNAMENTO CELLE
	
	for (i=0;i<NUMVICINE;i++)
	{
		Delta_h=h-news[i]_Qh;
		if ((GetY==YSUP)&&(i==1))
			Delta_h=0;
		if ((GetY==YFONDO)&&(i==4))
			Delta_h=0;
		if ((GetX==XW)&&(i==0))
			Delta_h=0;
		if ((GetX==XE)&&(i==5))
			Delta_h=0;
		if ((GetZ==ZOUT)&&(i==3))
			Delta_h=0;
		if ((GetZ==ZIN)&&(i==2))
			Delta_h=0;
		h=h-((Delta_h/(lato*lato))*delta_t*((cell_Qk+news[i]_Qk)/2)*cell_Qdqdh);
	}
	
	//---- CONDIZIONE AL CONTORNO SUPERIORE
	
	Zmid=ZOUT/2;
	if ((GetY==YSUP)&&(Xcella<46)&&(Zcella>(Zmid-20))&&(Zcella<(Zmid+20)))
	{
		teta_pioggia=lato*rain*delta_t/volume;
		h=h+teta_pioggia*cell_Qdqdh;
	}
	
	//--------------------------------- PEDOFUNZIONI
	
	psi=h-quota;
		
	//---------------------------(dteta/dh)^(-1) SECONDO RICHARDS
	
	denompow_uno=pow(alfa*(-psi), (1-n));
	denompow_due=pow(alfa*(-psi), n);
	denompow_tre=pow((1/(1+denompow_due)),(1/n-2));
	uno_su_dqdh=(denompow_uno/(alfa*(n-1)*(tetas-tetar)))*denompow_tre;
	
	denom_pow=pow(alfa*(-psi), n);
	teta=tetar+((tetas-tetar)*pow((1/(1+denom_pow)),(1-1/n)));
	denom_pow_start=pow(alfa*(734), n);
	teta_start=tetar+((tetas-tetar)*pow((1/(1+denom_pow_start)),(1-1/n)));
	moist_cont=teta/tetas;
	moist_diff=moist_cont-teta_start/tetas;
		
	satur=(teta-tetar)/(tetas-tetar);
	exp_c=n/(n-1);
	satur_expc=pow(satur,exp_c);
	exp_d=1-(1/n);
	satur_expd=pow((1-satur_expc),exp_d);
	k=ks*pow(satur,0.5)*pow((1-satur_expd),2);
	
	//--------------------------------- PEDOFUNZIONI
	
	//-----Verifica convergenza Deltat variabile
	
	if ((k>0)&&(uno_su_dqdh>0))
	{
		convergence=lato*lato/(6*k*uno_su_dqdh);
	}
	else
	{
		convergence=1.0;
	}
		
	//---Update
	
	update(cell_Qdqdh,uno_su_dqdh);
	update(cell_Qpsi, psi);
	update(cell_Qk, k);
	update(cell_Qh, h);
	update(cell_Qteta,teta);
	update(cell_Qmoist_cont,moist_cont);
	update(cell_Qmoist_diff,moist_diff);
	update(cell_Qconvergence,convergence);
	
	moist_print=cell_Qmoist_cont;
		
	if ((delta_t_cum>=2592000)&&(delta_t_cum_prec<=2592000)&&(GetZ==Zmid))
	{
		if ((GetX==XW)&&(GetY==YFONDO))
			{
				stream = fopen("ris30g.txt","a");
				fprintf(stream,"%f\t", moist_print);
			}
		else if ((GetX==XE)&&(GetY==YSUP))
			{
				fprintf(stream,"%f\n", moist_print);
				fclose(stream);
			}
		else if (GetX==XE)
			{
				fprintf(stream,"%f\n", moist_print);
			}	
		else
			{
				fprintf(stream,"%f\t", moist_print);
			}
	}
	
}

steering
{
		//VERIFICA BILANCIO IDRICO NEL PLOT
		float sum_teta=region_sum(Flusso, Qteta);
		float teta_step=lato*rain*delta_t/(lato*lato*lato);
		
		//VARIAZIONE DELTA_T SECONDO CONDIZIONE CONVERGENZA
		
		float min=region_min(Flusso, Qconvergence);
		if (min>105.0)
		{
			min=105.0;
		}
		cpt_set_param(&delta_t,(0.95*min));	

		cpt_set_param(&delta_t_cum_prec,delta_t_cum);
		cpt_set_param(&delta_t_cum,(delta_t_cum+delta_t));
		
		stream = fopen("deltat.txt","a");
		fprintf(stream,"%f, %f, %f, %f\n", delta_t, delta_t_cum, sum_teta, teta_step);
		fclose(stream);
}
